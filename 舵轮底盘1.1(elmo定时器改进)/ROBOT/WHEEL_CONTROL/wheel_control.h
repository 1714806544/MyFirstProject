#ifndef __WHEEL_CONTROL_H
#define __WHEEL_CONTROL_H
#include "sys.h"
#include "robot_control.h"


#define HASSIS_Struct_o1_length		1							
#define HASSIS_Struct_o2_length  	1 
#define HASSIS_Struct_o3_length		1								
#define HASSIS_Struct_o4_length   1
#define HASSIS_Struct_o1_angle    PI/4
#define HASSIS_Struct_o2_angle    PI/4
#define HASSIS_Struct_o3_angle    PI/4
#define HASSIS_Struct_o4_angle    PI/4

#define vector_mode 1
#define circle_mode 2
#define keep_mode 3
#define stop_mode 4

typedef struct
{
	float x;
	float y;
	float resultant_v;
	float absolute_angle;//与前进方向夹角 ，逆时针从0到360，【0,360）  ，即轮子的绝对式角度
	float angle_sum;  //    polar_angle积分，（负无穷，正无穷）       ， 即轮子的增量式角度
	float angle_gap;  //轮子与目标速度角度的差值，也就是要转的角度
	float v_angle; //目标合速度的角度
} wheel_Struct;


extern u8 Wheel_mode;

void gain_absolute_angle(wheel_Struct *wheel_v,int id);
void gain_gap_angle(wheel_Struct *wheel_v);


void Robot_Wheel_Control_3508(void);
void Robot_Wheel_Control(void);


//自己添加的
void Robot_Debounce(float dead_distance);
#endif
